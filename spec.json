{
  "openapi": "3.1.0",
  "info": {
    "contact": {
      "email": "support@cloudquery.io",
      "name": "CloudQuery Support Team",
      "url": "https://cloudquery.io"
    },
    "description": "API to interact with CloudQuery Cloud",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT"
    },
    "termsOfService": "https://www.cloudquery.io/terms",
    "title": "CloudQuery OpenAPI Spec",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.cloudquery.io/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "users"
    },
    {
      "name": "teams"
    },
    {
      "name": "plugins"
    },
    {
      "name": "uploads"
    },
    {
      "name": "images"
    },
    {
      "name": "healthcheck"
    },
    {
      "name": "limits"
    },
    {
      "name": "usage"
    },
    {
      "name": "addons"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "Health check endpoint, returns 200",
        "operationId": "HealthCheck",
        "responses": {
          "200": {
            "description": "Response"
          }
        },
        "security": [],
        "tags": [
          "healthcheck"
        ]
      }
    },
    "/upload/image": {
      "post": {
        "description": "Get a URL to upload image that will be publicly accessible",
        "operationId": "UploadImage",
        "parameters": [],
        "tags": [
          "uploads",
          "images"
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageURL"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/plugins": {
      "get": {
        "description": "List all plugins",
        "operationId": "ListPlugins",
        "parameters": [
          {
            "$ref": "#/components/parameters/plugin_sort_by"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/ListPlugin"
                      },
                      "type": "array",
                      "example": [
                        {
                          "name": "aws",
                          "kind": "source",
                          "team_name": "cloudquery",
                          "display_name": "AWS Source Plugin",
                          "category": "cloud-infrastructure",
                          "created_at": "2017-07-14T16:53:42Z",
                          "homepage": "https://cloudquery.io",
                          "logo": "https://images.cloudquery.io/logos/aws.png",
                          "official": true,
                          "short_description": "Sync data from AWS to any destination",
                          "repository": "https://github.com/cloudquery/cloudquery",
                          "tier": "paid",
                          "usd_per_row": "0.00123",
                          "free_rows_per_month": 10000
                        }
                      ]
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "security": [],
        "tags": [
          "plugins"
        ]
      },
      "post": {
        "description": "Create a plugin owned by the specified team. User must be part of that team.",
        "operationId": "CreatePlugin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plugin"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "plugins"
        ]
      }
    },
    "/plugins/{team_name}/{plugin_kind}/{plugin_name}": {
      "get": {
        "description": "Get details about a given plugin.",
        "operationId": "GetPlugin",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plugin"
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "security": [],
        "tags": [
          "plugins"
        ]
      },
      "patch": {
        "description": "Update a plugin",
        "operationId": "UpdatePlugin",
        "tags": [
          "plugins"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plugin"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      },
      "delete": {
        "description": "Delete plugin by team and plugin name",
        "operationId": "DeletePluginByTeamAndPluginName",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "plugins"
        ]
      }
    },
    "/plugins/{team_name}/{plugin_kind}/{plugin_name}/versions": {
      "get": {
        "description": "List all versions for a given plugin",
        "operationId": "ListPluginVersions",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          },
          {
            "$ref": "#/components/parameters/version_sort_by"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/include_drafts"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/PluginVersion"
                      },
                      "type": "array"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "security": [],
        "tags": [
          "plugins"
        ]
      }
    },
    "/plugins/{team_name}/{plugin_kind}/{plugin_name}/versions/{version_name}": {
      "get": {
        "description": "Get details about a given plugin version.",
        "operationId": "GetPluginVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginVersion"
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "security": [],
        "tags": [
          "plugins"
        ]
      },
      "put": {
        "description": "Create a new plugin version, or update a draft version",
        "operationId": "CreatePluginVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "message",
                  "protocols",
                  "supported_targets",
                  "package_type",
                  "checksums"
                ],
                "properties": {
                  "message": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 30000,
                    "description": "A message describing what's new or changed in this version.\nThis message will be displayed to users in the plugin's changelog.\nSupports limited markdown syntax.\n"
                  },
                  "protocols": {
                    "type": "array",
                    "description": "List of protocols supported by this plugin version",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "supported_targets": {
                    "type": "array",
                    "description": "The targets supported by this plugin version, formatted as <os>_<arch>",
                    "example": [
                      "linux_arm64",
                      "darwin_amd64",
                      "windows_amd64"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "checksums": {
                    "type": "array",
                    "description": "List of SHA-256 checksums for this plugin version, one for each supported target.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "package_type": {
                    "type": "string",
                    "description": "The package type of the plugin assets",
                    "enum": [
                      "native",
                      "docker"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success (the plugin version was updated)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginVersion"
                }
              }
            }
          },
          "201": {
            "description": "Success (the plugin version was created)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginVersion"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "plugins"
        ]
      },
      "patch": {
        "description": "Update a given plugin version",
        "operationId": "UpdatePluginVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PluginVersionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginVersion"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "plugins"
        ]
      }
    },
    "/plugins/{team_name}/{plugin_kind}/{plugin_name}/versions/{version_name}/docs": {
      "get": {
        "description": "List all documentation pages for a given plugin version.",
        "operationId": "ListPluginVersionDocs",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/PluginDocsPage"
                      },
                      "type": "array"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "security": [],
        "tags": [
          "plugins"
        ]
      },
      "put": {
        "description": "Create or update one or more plugin version docs pages.",
        "operationId": "CreatePluginVersionDocs",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "pages"
                ],
                "properties": {
                  "pages": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PluginDocsPageCreate"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created or updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "names": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PluginDocsPageName"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "plugins"
        ]
      },
      "delete": {
        "description": "Delete one or more plugin version docs pages.",
        "operationId": "DeletePluginVersionDocs",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "names"
                ],
                "properties": {
                  "names": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PluginDocsPageName"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "plugins"
        ]
      }
    },
    "/plugins/{team_name}/{plugin_kind}/{plugin_name}/versions/{version_name}/tables": {
      "get": {
        "description": "List tables for a given plugin version. This only applies to source plugins.",
        "operationId": "ListPluginVersionTables",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/PluginTable"
                      },
                      "type": "array"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "security": [],
        "tags": [
          "plugins"
        ]
      },
      "put": {
        "description": "Create or update one or more plugin version tables. This only applies to source plugins, and can only be done if the plugin version is in draft.",
        "operationId": "CreatePluginVersionTables",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tables"
                ],
                "properties": {
                  "tables": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PluginTableCreate"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created or updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "names": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PluginTableName"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "plugins"
        ]
      },
      "delete": {
        "description": "Delete one or more plugin version tables.",
        "operationId": "DeletePluginVersionTables",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "names"
                ],
                "properties": {
                  "names": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PluginTableName"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "plugins"
        ]
      }
    },
    "/plugins/{team_name}/{plugin_kind}/{plugin_name}/versions/{version_name}/tables/{table_name}": {
      "get": {
        "description": "Get schema for a given table and plugin version. This only applies to source plugins.",
        "operationId": "GetPluginVersionTable",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          },
          {
            "in": "path",
            "name": "table_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginTableDetails"
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "security": [],
        "tags": [
          "plugins"
        ]
      }
    },
    "/plugins/{team_name}/{plugin_kind}/{plugin_name}/versions/{version_name}/assets/{target_name}": {
      "get": {
        "description": "Download an asset for a given plugin version and target",
        "operationId": "DownloadPluginAsset",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          },
          {
            "$ref": "#/components/parameters/target_name"
          }
        ],
        "responses": {
          "302": {
            "description": "Response",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "security": [],
        "tags": [
          "plugins"
        ]
      },
      "post": {
        "description": "Get a URL to upload an asset for a given plugin version and target",
        "operationId": "UploadPluginAsset",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          },
          {
            "$ref": "#/components/parameters/target_name"
          }
        ],
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseURL"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "plugins"
        ]
      }
    },
    "/addons": {
      "get": {
        "description": "List all addons",
        "operationId": "ListAddons",
        "parameters": [
          {
            "$ref": "#/components/parameters/addon_sort_by"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/Addon"
                      },
                      "type": "array",
                      "example": [
                        {
                          "name": "aws-policies",
                          "team_name": "cloudquery",
                          "display_name": "AWS Policies",
                          "category": "cloud-infrastructure",
                          "created_at": "2017-07-14T16:53:42Z",
                          "homepage": "https://cloudquery.io",
                          "logo": "https://images.cloudquery.io/logos/aws.png",
                          "official": true,
                          "short_description": "Sync data from AWS to any destination",
                          "repository": "https://github.com/cloudquery/cloudquery",
                          "tier": "free",
                          "price_usd": "50",
                          "addon_type": "visualization",
                          "addon_format": "zip"
                        }
                      ]
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "security": [],
        "tags": [
          "addons"
        ]
      },
      "post": {
        "description": "Create an addon owned by the specified team. User must be part of that team.",
        "operationId": "CreateAddon",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddonCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Addon"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "addons"
        ]
      }
    },
    "/addons/{team_name}/{addon_name}": {
      "get": {
        "description": "Get details about a given addon.",
        "operationId": "GetAddon",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/addon_name"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Addon"
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "security": [],
        "tags": [
          "addons"
        ]
      },
      "patch": {
        "description": "Update an Addon",
        "operationId": "UpdateAddon",
        "tags": [
          "addons"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/addon_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddonUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Addon"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      },
      "delete": {
        "description": "Delete addon by team and addon name",
        "operationId": "DeleteAddonByTeamAndName",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/addon_name"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "addons"
        ]
      }
    },
    "/addons/{team_name}/{addon_name}/versions": {
      "get": {
        "description": "List all versions for a given addon",
        "operationId": "ListAddonVersions",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/addon_name"
          },
          {
            "$ref": "#/components/parameters/version_sort_by"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/include_drafts"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/AddonVersion"
                      },
                      "type": "array"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "security": [],
        "tags": [
          "addons"
        ]
      }
    },
    "/addons/{team_name}/{addon_name}/versions/{version_name}": {
      "get": {
        "description": "Get details about a given addon version.",
        "operationId": "GetAddonVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/addon_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddonVersion"
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "security": [],
        "tags": [
          "plugins"
        ]
      },
      "put": {
        "description": "Create a new addon version, or update a draft version",
        "operationId": "CreateAddonVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/addon_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "message",
                  "doc",
                  "checksum",
                  "plugin_deps"
                ],
                "properties": {
                  "message": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 30000,
                    "description": "A message describing what's new or changed in this version.\nThis message will be displayed to users in the addon's changelog.\nSupports limited markdown syntax.\n"
                  },
                  "doc": {
                    "type": "string",
                    "description": "Main README in MD format"
                  },
                  "plugin_deps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "plugin dependencies in the format of ['team_name/kind/plugin_name@version']",
                    "minItems": 1
                  },
                  "addon_deps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "addon dependencies in the format of ['team_name/addon_name@version']"
                  },
                  "checksum": {
                    "type": "string",
                    "description": "SHA-256 checksum for the addon asset"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddonVersion"
                }
              }
            }
          },
          "201": {
            "description": "Success (the addon version was created)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddonVersion"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "addons"
        ]
      },
      "patch": {
        "description": "Update a given addon version",
        "operationId": "UpdateAddonVersion",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/addon_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddonVersionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddonVersion"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "addons"
        ]
      }
    },
    "/addons/{team_name}/{addon_name}/versions/{version_name}/assets": {
      "get": {
        "description": "Download a asset for a given version",
        "operationId": "DownloadAddonAsset",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/addon_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          }
        ],
        "responses": {
          "302": {
            "description": "Response",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "security": [],
        "tags": [
          "addons"
        ]
      },
      "post": {
        "description": "Get a URL to upload an asset for a given addon version",
        "operationId": "UploadAddonAsset",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/addon_name"
          },
          {
            "$ref": "#/components/parameters/version_name"
          }
        ],
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseURL"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "addons"
        ]
      }
    },
    "/teams": {
      "get": {
        "description": "List all teams",
        "operationId": "ListTeams",
        "parameters": [
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/Team"
                      },
                      "type": "array"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "users"
        ]
      },
      "post": {
        "description": "Create a team owned by the current user.",
        "operationId": "CreateTeam",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "name",
                  "display_name"
                ],
                "properties": {
                  "name": {
                    "$ref": "#/components/schemas/TeamName"
                  },
                  "display_name": {
                    "type": "string",
                    "description": "The team's display name",
                    "minLength": 1,
                    "maxLength": 255
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams"
        ]
      }
    },
    "/teams/{team_name}": {
      "get": {
        "description": "Get a team by name",
        "operationId": "GetTeamByName",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams"
        ]
      },
      "patch": {
        "description": "Update team attributes",
        "operationId": "UpdateTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "The team's display name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams"
        ]
      }
    },
    "/teams/{team_name}/plugins": {
      "get": {
        "description": "List all plugins for the team.",
        "operationId": "ListPluginsByTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/include_private"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/Plugin"
                      },
                      "type": "array",
                      "example": [
                        {
                          "name": "aws-source",
                          "kind": "source",
                          "team_name": "cloudquery",
                          "display_name": "AWS Source Plugin",
                          "category": "cloud-infrastructure",
                          "created_at": "2017-07-14T16:53:42Z",
                          "homepage": "https://cloudquery.io",
                          "logo": "https://images.cloudquery.io/logos/aws.png",
                          "official": true,
                          "short_description": "Sync data from AWS to any destination",
                          "repository": "https://github.com/cloudquery/cloudquery",
                          "tier": "paid",
                          "usd_per_row": "0.00123",
                          "free_rows_per_month": 10000
                        }
                      ]
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "plugins"
        ]
      },
      "delete": {
        "description": "Delete plugins by team",
        "operationId": "DeletePluginsByTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "plugins"
        ]
      }
    },
    "/teams/{team_name}/addons": {
      "get": {
        "description": "List all addons for the team.",
        "operationId": "ListAddonsByTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/include_private"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/Addon"
                      },
                      "type": "array",
                      "example": [
                        {
                          "name": "aws-policies",
                          "team_name": "cloudquery",
                          "display_name": "AWS Policies",
                          "category": "cloud-infrastructure",
                          "created_at": "2017-07-14T16:53:42Z",
                          "homepage": "https://cloudquery.io",
                          "logo": "https://images.cloudquery.io/logos/aws.png",
                          "official": true,
                          "short_description": "AWS policies",
                          "repository": "https://github.com/cloudquery/cloudquery",
                          "tier": "paid",
                          "price_usd": "50",
                          "addon_type": "visualization",
                          "addon_format": "zip"
                        }
                      ]
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "addons"
        ]
      },
      "delete": {
        "description": "Delete addons by team",
        "operationId": "DeleteAddonsByTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "addons"
        ]
      }
    },
    "/teams/{team_name}/memberships": {
      "get": {
        "description": "Get memberships to the team.",
        "operationId": "GetTeamMemberships",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/MembershipWithUser"
                      },
                      "type": "array",
                      "example": [
                        {
                          "role": "admin",
                          "user": {
                            "created_at": "2017-07-14T16:53:42Z",
                            "email": "user@clouduery.io",
                            "name": "user",
                            "updated_at": "2017-07-14T16:53:42Z"
                          }
                        }
                      ]
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            },
            "description": "Response"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "users"
        ]
      }
    },
    "/teams/{team_name}/monthly-limits": {
      "get": {
        "description": "List all monthly limits for the team.",
        "operationId": "ListMonthlyLimitsByTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of monthly limits for the team.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/MonthlyLimit"
                      },
                      "type": "array"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "plugins",
          "limits"
        ]
      },
      "post": {
        "description": "Create a monthly limit for a plugin",
        "operationId": "CreateMonthlyLimit",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonthlyLimitCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New monthly limit created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthlyLimit"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "plugins",
          "limits"
        ]
      }
    },
    "/teams/{team_name}/monthly-limits/{plugin_team}/{plugin_kind}/{plugin_name}": {
      "get": {
        "description": "Get a monthly limit for a plugin",
        "operationId": "GetMonthlyLimit",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_team"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Monthly limit retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthlyLimit"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "plugins",
          "limits"
        ]
      },
      "put": {
        "description": "Update a monthly limit for a plugin",
        "operationId": "UpdateMonthlyLimit",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_team"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonthlyLimitUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Monthly limit updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthlyLimit"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "plugins",
          "limits"
        ]
      },
      "delete": {
        "description": "Delete a monthly limit for a plugin",
        "operationId": "DeleteMonthlyLimit",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_team"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          }
        ],
        "responses": {
          "204": {
            "description": "Monthly limit deleted."
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "plugins",
          "limits"
        ]
      }
    },
    "/teams/{team_name}/usage": {
      "get": {
        "description": "List plugin usage for the current calendar month.",
        "operationId": "ListTeamPluginUsage",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "description": "List plugin usage for the current calendar month.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/UsageCurrent"
                      },
                      "type": "array"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "plugins",
          "usage"
        ]
      },
      "post": {
        "description": "Increase the usage of a plugin. This can incur billing costs and should be used only by plugin SDKs.",
        "operationId": "IncreaseTeamPluginUsage",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsageIncrease"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Plugin usage for the current calendar month.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageCurrent"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "plugins",
          "usage"
        ]
      }
    },
    "/teams/{team_name}/usage/{plugin_team}/{plugin_kind}/{plugin_name}": {
      "get": {
        "description": "Get plugin usage for the current calendar month.",
        "operationId": "GetTeamPluginUsage",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/plugin_team"
          },
          {
            "$ref": "#/components/parameters/plugin_kind"
          },
          {
            "$ref": "#/components/parameters/plugin_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Plugin usage for the current calendar month.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageCurrent"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "plugins",
          "usage"
        ]
      }
    },
    "/teams/{team_name}/invitations": {
      "get": {
        "operationId": "ListTeamInvitations",
        "description": "List of open invitations to the team",
        "tags": [
          "teams",
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invitation"
                      }
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      },
      "post": {
        "operationId": "EmailTeamInvitation",
        "description": "Invite a user to join a team with their email address",
        "tags": [
          "teams",
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "role"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "admin",
                      "member"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/teams/{team_name}/invitations/accept": {
      "post": {
        "operationId": "AcceptTeamInvitation",
        "description": "Accept an invitation to the team, creating a user membership",
        "tags": [
          "teams",
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The invitation has been accepted and the authenticated user is now a member of the team.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipWithTeam"
                }
              }
            }
          },
          "303": {
            "description": "The authenticated user is already a member of this team.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipWithTeam"
                }
              }
            }
          },
          "403": {
            "description": "You do not have an invitation to join this team.",
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/teams/{team_name}/invitations/{email}": {
      "delete": {
        "operationId": "CancelTeamInvitation",
        "description": "Cancel an invitation to the team, preventing the user becoming a team member",
        "tags": [
          "teams",
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/email"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/teams/{team_name}/users": {
      "get": {
        "description": "List all users in the current team.",
        "operationId": "ListUsersByTeam",
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/User"
                      },
                      "type": "array"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "users"
        ]
      }
    },
    "/user": {
      "get": {
        "description": "Get the current authenticated user from the OAuth token\n",
        "operationId": "GetCurrentUser",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "users"
        ]
      },
      "patch": {
        "description": "Update attributes for the current authenticated user from the OAuth token",
        "operationId": "UpdateCurrentUser",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user's name",
                    "minLength": 1,
                    "maxLength": 255
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/user/invitations": {
      "get": {
        "operationId": "ListCurrentUserInvitations",
        "description": "List of the current user's unaccepted invitations",
        "tags": [
          "teams",
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InvitationWithToken"
                      }
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/user/memberships": {
      "get": {
        "description": "Get memberships that the user has accepted.",
        "operationId": "GetCurrentUserMemberships",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "metadata",
                    "items"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/MembershipWithTeam"
                      },
                      "type": "array",
                      "example": [
                        {
                          "role": "admin",
                          "team": {
                            "created_at": "2017-07-14T16:53:42Z",
                            "name": "cloudquery",
                            "display_name": "CloudQuery"
                          }
                        }
                      ]
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            },
            "description": "Response"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "tags": [
          "teams",
          "users"
        ]
      }
    },
    "/teams/{team_name}/apikeys": {
      "get": {
        "description": "List all team API Keys",
        "operationId": "ListTeamAPIKeys",
        "tags": [
          "teams"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/APIKey"
                      },
                      "type": "array"
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/ListMetadata"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      },
      "post": {
        "description": "Create new team API Key. This is useful in CI",
        "operationId": "CreateTeamAPIKey",
        "tags": [
          "teams"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "expires_at",
                  "role",
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "scope": {
                    "$ref": "#/components/schemas/APIKeyScope"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/teams/{team_name}/apikeys/{apikey_name}": {
      "delete": {
        "description": "Delete API Key. This will remove any future access by this API Key.",
        "operationId": "DeleteTeamAPIKey",
        "tags": [
          "teams"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/team_name"
          },
          {
            "$ref": "#/components/parameters/apikey_name"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/RequiresAuthentication"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "scheme": "bearer",
        "type": "http"
      }
    },
    "schemas": {
      "ImageURL": {
        "properties": {
          "upload_url": {
            "type": "string",
            "example": "https://cloudquery.io/api/v1/upload/1234567890abcdef1234567890abcdef"
          },
          "download_url": {
            "type": "string",
            "example": "https://cloudquery.io/api/v1/download/1234567890abcdef1234567890abcdef"
          }
        },
        "required": [
          "upload_url",
          "download_url"
        ]
      },
      "BasicError": {
        "additionalProperties": false,
        "description": "Basic Error",
        "required": [
          "message",
          "status"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          }
        },
        "title": "Basic Error",
        "type": "object"
      },
      "TeamName": {
        "description": "The unique name for the team.",
        "maxLength": 255,
        "pattern": "^[a-z](-?[a-z0-9]+)+$",
        "type": "string",
        "example": "cloudquery"
      },
      "PluginName": {
        "description": "The unique name for the plugin.",
        "maxLength": 255,
        "pattern": "^[a-z](-?[a-z0-9]+)+$",
        "type": "string",
        "example": "aws-source"
      },
      "PluginKind": {
        "description": "The kind of plugin, ie. source or destination.",
        "type": "string",
        "example": "source",
        "enum": [
          "source",
          "destination"
        ]
      },
      "PluginCategory": {
        "description": "Supported categories for plugins",
        "type": "string",
        "enum": [
          "cloud-infrastructure",
          "databases",
          "sales-marketing",
          "engineering-analytics",
          "other"
        ]
      },
      "PluginTier": {
        "description": "Supported tiers for plugins",
        "type": "string",
        "enum": [
          "free",
          "paid"
        ]
      },
      "Plugin": {
        "additionalProperties": false,
        "description": "CloudQuery Plugin",
        "properties": {
          "team_name": {
            "$ref": "#/components/schemas/TeamName"
          },
          "name": {
            "$ref": "#/components/schemas/PluginName"
          },
          "kind": {
            "$ref": "#/components/schemas/PluginKind"
          },
          "category": {
            "$ref": "#/components/schemas/PluginCategory"
          },
          "created_at": {
            "example": "2017-07-14T16:53:42Z",
            "format": "date-time",
            "type": "string"
          },
          "homepage": {
            "type": "string",
            "example": "https://cloudquery.io"
          },
          "logo": {
            "type": "string",
            "example": "https://images.cloudquery.io/logos/aws.png"
          },
          "display_name": {
            "description": "The plugin's display name",
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "example": "AWS Source Plugin"
          },
          "official": {
            "description": "True if the plugin is maintained by CloudQuery, false otherwise",
            "type": "boolean"
          },
          "repository": {
            "type": "string",
            "example": "https://github.com/cloudquery/cloudquery"
          },
          "short_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 512,
            "example": "Sync data from AWS to any destination"
          },
          "tier": {
            "$ref": "#/components/schemas/PluginTier"
          },
          "public": {
            "description": "Whether the plugin is listed in the CloudQuery Hub. If false, the plugin will not be shown in the CloudQuery Hub and will only be visible to members of the plugin's team.",
            "type": "boolean"
          },
          "usd_per_row": {
            "type": "string",
            "pattern": "^\\d+(?:\\.\\d{1,10})?$",
            "description": "The price per row in USD. This is used to calculate the price of a sync.",
            "example": "0.0001",
            "x-go-name": "USDPerRow"
          },
          "free_rows_per_month": {
            "type": "integer",
            "format": "int64",
            "description": "The number of rows that can be synced for free each month.",
            "example": 1000
          }
        },
        "required": [
          "team_name",
          "name",
          "kind",
          "category",
          "created_at",
          "logo",
          "display_name",
          "official",
          "short_description",
          "tier",
          "usd_per_row",
          "free_rows_per_month"
        ],
        "title": "CloudQuery Plugin",
        "type": "object"
      },
      "VersionName": {
        "type": "string",
        "description": "The version in semantic version format.",
        "pattern": "^v[0-9]+\\.[0-9]+\\.[0-9]+(-[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?(\\+[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?$"
      },
      "ListPlugin": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plugin"
          },
          {
            "type": "object",
            "properties": {
              "latest_version": {
                "$ref": "#/components/schemas/VersionName"
              }
            }
          }
        ]
      },
      "ListMetadata": {
        "properties": {
          "total_count": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          }
        }
      },
      "PluginCreate": {
        "type": "object",
        "required": [
          "team_name",
          "kind",
          "name",
          "category",
          "tier",
          "display_name",
          "short_description",
          "logo",
          "public"
        ],
        "properties": {
          "team_name": {
            "$ref": "#/components/schemas/TeamName"
          },
          "kind": {
            "$ref": "#/components/schemas/PluginKind"
          },
          "name": {
            "$ref": "#/components/schemas/PluginName"
          },
          "category": {
            "$ref": "#/components/schemas/PluginCategory"
          },
          "tier": {
            "$ref": "#/components/schemas/PluginTier"
          },
          "display_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "The plugin's display name, as shown in the CloudQuery Hub.",
            "example": "AWS Source Plugin"
          },
          "short_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 512,
            "description": "Short description of the plugin. This will be shown in the CloudQuery Hub.",
            "example": "Sync data from AWS to any destination"
          },
          "homepage": {
            "type": "string",
            "example": "https://cloudquery.io"
          },
          "repository": {
            "type": "string",
            "example": "https://github.com/cloudquery/cloudquery"
          },
          "public": {
            "type": "boolean",
            "description": "Whether the plugin is listed in the CloudQuery Hub. If false, the plugin will not be shown in the CloudQuery Hub and will only be visible to members of the team.",
            "example": true
          },
          "logo": {
            "type": "string",
            "description": "URL to the plugin's logo. This will be shown in the CloudQuery Hub. This must point to https://images.cloudquery.io/...",
            "example": "https://images.cloudquery.io/logos/aws.png"
          },
          "usd_per_row": {
            "type": "string",
            "pattern": "^\\d+(?:\\.\\d{1,10})?$",
            "description": "The price per row in USD. This is used to calculate the price of a sync.",
            "example": "0.0001",
            "x-go-name": "USDPerRow"
          },
          "free_rows_per_month": {
            "type": "integer",
            "format": "int64",
            "description": "The number of rows that can be synced for free each month.",
            "example": 1000
          }
        }
      },
      "FieldError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BasicError"
          },
          {
            "properties": {
              "errors": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "field_errors": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "PluginUpdate": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/PluginCategory"
          },
          "tier": {
            "$ref": "#/components/schemas/PluginTier"
          },
          "display_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "The plugin's display name, as shown in the CloudQuery Hub.",
            "example": "AWS Source Plugin"
          },
          "short_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 512,
            "description": "Short description of the plugin. This will be shown in the CloudQuery Hub.",
            "example": "Sync data from AWS to any destination"
          },
          "homepage": {
            "type": "string",
            "example": "https://cloudquery.io"
          },
          "repository": {
            "type": "string",
            "example": "https://github.com/cloudquery/cloudquery"
          },
          "logo": {
            "type": "string",
            "description": "URL to the plugin's logo. This will be shown in the CloudQuery Hub. This must point to https://images.cloudquery.io/...",
            "example": "https://images.cloudquery.io/logos/aws.png"
          },
          "public": {
            "type": "boolean",
            "description": "If plugin is not public, it won't be visible to other teams in the CloudQuery Hub."
          },
          "usd_per_row": {
            "type": "string",
            "pattern": "^\\d+(?:\\.\\d{1,10})?$",
            "description": "The price per row in USD. This is used to calculate the price of a sync.",
            "example": "0.0001",
            "x-go-name": "USDPerRow"
          },
          "free_rows_per_month": {
            "type": "integer",
            "format": "int64",
            "description": "The number of rows that can be synced for free each month.",
            "example": 1000
          }
        }
      },
      "PluginVersion": {
        "additionalProperties": false,
        "description": "CloudQuery Plugin Version",
        "required": [
          "created_at",
          "name",
          "message",
          "draft",
          "retracted",
          "protocols",
          "supported_targets",
          "checksums",
          "package_type"
        ],
        "properties": {
          "created_at": {
            "example": "2017-07-14T16:53:42Z",
            "format": "date-time",
            "type": "string",
            "description": "The date and time the plugin version was created."
          },
          "published_at": {
            "example": "2017-07-14T16:53:42Z",
            "format": "date-time",
            "type": "string",
            "description": "The date and time the plugin version was set to non-draft (published)."
          },
          "name": {
            "$ref": "#/components/schemas/VersionName"
          },
          "message": {
            "type": "string",
            "description": "Description of what's new or changed in this version (supports markdown)",
            "example": "- Added support for AWS S3 - Added support for AWS EC2"
          },
          "draft": {
            "type": "boolean",
            "description": "If a plugin version is in draft, it will not show to members outside the team or be counted as the latest version."
          },
          "retracted": {
            "type": "boolean",
            "description": "If a plugin version is retracted, assets will still be available for download, but the version will be marked as retracted to discourage use."
          },
          "protocols": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The CloudQuery protocols supported by this plugin version",
            "example": [
              1,
              2
            ]
          },
          "supported_targets": {
            "type": "array",
            "description": "The targets supported by this plugin version, formatted as <os>_<arch>",
            "example": [
              "linux_arm64",
              "darwin_amd64",
              "windows_amd64"
            ],
            "items": {
              "type": "string"
            }
          },
          "checksums": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The checksums of the plugin assets"
          },
          "package_type": {
            "type": "string",
            "description": "The package type of the plugin assets",
            "enum": [
              "native",
              "docker"
            ]
          }
        },
        "title": "CloudQuery Plugin Version",
        "type": "object"
      },
      "PluginVersionUpdate": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Description of what's new or changed in this version (supports markdown)",
            "example": "- Added support for *AWS S3* - Added support for *AWS EC2*"
          },
          "draft": {
            "type": "boolean",
            "description": "If a plugin version is in draft, it will not show to members outside the team or be counted as the latest version. Once draft is set to false, only certain fields can be updated."
          },
          "retracted": {
            "type": "boolean",
            "description": "If a plugin version is retracted, assets will still be available for download, but the version will be marked as retracted to discourage use."
          },
          "protocols": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The supported CloudQuery protocols by this plugin version",
            "example": [
              1,
              2
            ]
          },
          "supported_targets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checksums": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The SHA-256 checksums of the plugin binaries, one per supported target."
          },
          "package_type": {
            "type": "string",
            "description": "The package type of the plugin binaries"
          }
        }
      },
      "PluginDocsPageName": {
        "description": "The unique name for the plugin documentation page.",
        "maxLength": 255,
        "pattern": "^[\\w,\\s-]+$",
        "type": "string",
        "example": "overview"
      },
      "PluginDocsPage": {
        "additionalProperties": false,
        "description": "CloudQuery Plugin Documentation Page",
        "required": [
          "name",
          "content"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/PluginDocsPageName"
          },
          "content": {
            "type": "string",
            "description": "The content of the documentation page. Supports markdown.",
            "example": "# Getting Started\n\nThis is the getting started page."
          }
        },
        "title": "CloudQuery Plugin Documentation Page",
        "type": "object"
      },
      "PluginDocsPageCreate": {
        "additionalProperties": false,
        "description": "CloudQuery Plugin Documentation Page",
        "required": [
          "name",
          "content"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/PluginDocsPageName"
          },
          "content": {
            "type": "string",
            "description": "The content of the documentation page. Supports markdown.",
            "example": "# Getting Started\n\nThis is the getting started page."
          }
        },
        "title": "CloudQuery Plugin Documentation Page",
        "type": "object"
      },
      "PluginTableName": {
        "description": "Name of the table",
        "maxLength": 255,
        "pattern": "^[a-z](_?[a-z0-9]+)+$",
        "type": "string",
        "example": "aws_ec2_instances"
      },
      "PluginTable": {
        "additionalProperties": false,
        "description": "CloudQuery Plugin Table",
        "required": [
          "description",
          "is_incremental",
          "name",
          "relations",
          "title"
        ],
        "properties": {
          "description": {
            "description": "Description of the table",
            "type": "string",
            "example": "AWS S3 Buckets"
          },
          "is_incremental": {
            "description": "Whether the table is incremental",
            "type": "boolean"
          },
          "name": {
            "$ref": "#/components/schemas/PluginTableName"
          },
          "parent": {
            "description": "Name of the parent table, if any",
            "type": "string",
            "example": "nil"
          },
          "relations": {
            "description": "Names of the tables that depend on this table",
            "items": {
              "type": "string"
            },
            "type": "array",
            "example": [
              "aws_s3_bucket_cors_rules"
            ]
          },
          "title": {
            "description": "Title of the table",
            "type": "string",
            "example": "AWS S3 Buckets"
          }
        },
        "title": "CloudQuery Plugin Table",
        "type": "object"
      },
      "PluginTableColumn": {
        "additionalProperties": false,
        "description": "CloudQuery Plugin Column",
        "required": [
          "description",
          "incremental_key",
          "name",
          "not_null",
          "primary_key",
          "type",
          "unique"
        ],
        "properties": {
          "description": {
            "description": "Description of the column",
            "type": "string"
          },
          "incremental_key": {
            "description": "Whether the column is used as an incremental key",
            "type": "boolean"
          },
          "name": {
            "description": "Name of the column",
            "type": "string"
          },
          "not_null": {
            "description": "Whether the column is nullable",
            "type": "boolean"
          },
          "primary_key": {
            "description": "Whether the column is part of the primary key",
            "type": "boolean"
          },
          "type": {
            "description": "Arrow Type of the column",
            "type": "string"
          },
          "unique": {
            "description": "Whether the column has a unique constraint",
            "type": "boolean"
          }
        },
        "title": "CloudQuery Plugin Table Column",
        "type": "object"
      },
      "PluginTableCreate": {
        "additionalProperties": false,
        "description": "CloudQuery Plugin Table",
        "required": [
          "name"
        ],
        "properties": {
          "description": {
            "description": "Description of the table",
            "type": "string",
            "example": "AWS S3 Buckets"
          },
          "is_incremental": {
            "description": "Whether the table is incremental",
            "type": "boolean"
          },
          "name": {
            "$ref": "#/components/schemas/PluginTableName"
          },
          "parent": {
            "description": "Name of the parent table, if any",
            "type": "string",
            "example": "nil"
          },
          "relations": {
            "description": "Names of the tables that depend on this table",
            "items": {
              "type": "string"
            },
            "type": "array",
            "example": [
              "aws_s3_bucket_cors_rules"
            ]
          },
          "title": {
            "description": "Title of the table",
            "type": "string",
            "example": "AWS S3 Buckets"
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginTableColumn"
            }
          }
        },
        "title": "CloudQuery Plugin Table",
        "type": "object"
      },
      "PluginTableDetails": {
        "additionalProperties": false,
        "required": [
          "columns",
          "description",
          "is_incremental",
          "name",
          "relations",
          "title"
        ],
        "properties": {
          "columns": {
            "description": "List of columns",
            "items": {
              "$ref": "#/components/schemas/PluginTableColumn"
            },
            "type": "array"
          },
          "description": {
            "description": "Description of the table",
            "type": "string"
          },
          "is_incremental": {
            "description": "Whether the table is incremental",
            "type": "boolean"
          },
          "name": {
            "description": "Name of the table",
            "type": "string"
          },
          "parent": {
            "description": "Name of the parent table, if any",
            "type": "string"
          },
          "relations": {
            "description": "Names of the tables that depend on this table",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "description": "Title of the table",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReleaseURL": {
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string"
          }
        }
      },
      "AddonName": {
        "description": "The unique name for the addon.",
        "maxLength": 255,
        "pattern": "^[a-z](-?[a-z0-9]+)+$",
        "type": "string",
        "example": "aws-policy"
      },
      "AddonCategory": {
        "description": "Supported categories for addons",
        "type": "string",
        "enum": [
          "cloud-infrastructure",
          "databases",
          "sales-marketing",
          "engineering-analytics",
          "other"
        ]
      },
      "AddonType": {
        "description": "Supported types for addons",
        "type": "string",
        "enum": [
          "transformation",
          "visualization"
        ]
      },
      "AddonFormat": {
        "description": "Supported formats for addons",
        "type": "string",
        "enum": [
          "zip"
        ]
      },
      "AddonTier": {
        "description": "Supported tiers for addons",
        "type": "string",
        "enum": [
          "free",
          "paid"
        ]
      },
      "Addon": {
        "additionalProperties": false,
        "description": "CloudQuery Addon",
        "properties": {
          "team_name": {
            "$ref": "#/components/schemas/TeamName"
          },
          "name": {
            "$ref": "#/components/schemas/AddonName"
          },
          "official": {
            "description": "True if the addon is maintained by CloudQuery, false otherwise",
            "type": "boolean"
          },
          "category": {
            "$ref": "#/components/schemas/AddonCategory"
          },
          "addon_type": {
            "$ref": "#/components/schemas/AddonType"
          },
          "addon_format": {
            "$ref": "#/components/schemas/AddonFormat"
          },
          "tier": {
            "$ref": "#/components/schemas/AddonTier"
          },
          "price_usd": {
            "type": "string",
            "pattern": "^\\d+(?:\\.\\d{1,10})?$",
            "description": "The price for 6 months",
            "example": "50",
            "x-go-name": "PriceUSD"
          },
          "short_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 512,
            "example": "AWS Asset inventory dashboard for grafana"
          },
          "display_name": {
            "description": "The addon's display name",
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "example": "AWS Asset inventory"
          },
          "homepage": {
            "type": "string",
            "example": "https://cloudquery.io"
          },
          "repository": {
            "type": "string",
            "example": "https://github.com/cloudquery/cloudquery"
          },
          "logo": {
            "type": "string",
            "example": "https://images.cloudquery.io/logos/aws.png"
          },
          "public": {
            "description": "Whether the plugin is listed in the CloudQuery Hub. If false, the plugin will not be shown in the CloudQuery Hub and will only be visible to members of the plugin's team.",
            "type": "boolean"
          },
          "created_at": {
            "example": "2017-07-14T16:53:42Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "team_name",
          "name",
          "display_name",
          "official",
          "category",
          "addon_type",
          "addon_format",
          "tier",
          "price_usd",
          "short_description",
          "logo",
          "created_at"
        ],
        "title": "CloudQuery Addon",
        "type": "object"
      },
      "AddonCreate": {
        "additionalProperties": false,
        "description": "CloudQuery AddonCreate",
        "properties": {
          "team_name": {
            "$ref": "#/components/schemas/TeamName"
          },
          "name": {
            "$ref": "#/components/schemas/AddonName"
          },
          "category": {
            "$ref": "#/components/schemas/AddonCategory"
          },
          "addon_type": {
            "$ref": "#/components/schemas/AddonType"
          },
          "addon_format": {
            "$ref": "#/components/schemas/AddonFormat"
          },
          "tier": {
            "$ref": "#/components/schemas/AddonTier"
          },
          "price_usd": {
            "type": "string",
            "pattern": "^\\d+(?:\\.\\d{1,10})?$",
            "description": "The price for 6 months",
            "example": "50",
            "x-go-name": "PriceUSD"
          },
          "short_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 512,
            "example": "AWS Asset inventory dashboard for grafana"
          },
          "display_name": {
            "description": "The addon's display name",
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "example": "AWS Asset inventory"
          },
          "homepage": {
            "type": "string",
            "example": "https://cloudquery.io"
          },
          "repository": {
            "type": "string",
            "example": "https://github.com/cloudquery/cloudquery"
          },
          "logo": {
            "type": "string",
            "example": "https://images.cloudquery.io/logos/aws.png"
          },
          "public": {
            "description": "Whether the plugin is listed in the CloudQuery Hub. If false, the plugin will not be shown in the CloudQuery Hub and will only be visible to members of the plugin's team.",
            "type": "boolean"
          }
        },
        "required": [
          "team_name",
          "name",
          "category",
          "addon_type",
          "addon_format",
          "tier",
          "display_name",
          "short_description",
          "logo",
          "public"
        ],
        "title": "CloudQuery Addon",
        "type": "object"
      },
      "AddonUpdate": {
        "additionalProperties": false,
        "description": "CloudQuery AddonUpdate",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/AddonCategory"
          },
          "addon_type": {
            "$ref": "#/components/schemas/AddonType"
          },
          "addon_format": {
            "$ref": "#/components/schemas/AddonFormat"
          },
          "tier": {
            "$ref": "#/components/schemas/AddonTier"
          },
          "price_usd": {
            "type": "string",
            "pattern": "^\\d+(?:\\.\\d{1,10})?$",
            "description": "The price for 6 months in USD",
            "example": "50",
            "x-go-name": "PriceUSD"
          },
          "short_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 512,
            "example": "AWS Asset inventory dashboard for grafana"
          },
          "display_name": {
            "description": "The addon's display name",
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "example": "AWS Asset inventory"
          },
          "homepage": {
            "type": "string",
            "example": "https://cloudquery.io"
          },
          "repository": {
            "type": "string",
            "example": "https://github.com/cloudquery/cloudquery"
          },
          "logo": {
            "type": "string",
            "example": "https://images.cloudquery.io/logos/aws.png"
          },
          "public": {
            "description": "Whether the plugin is listed in the CloudQuery Hub. If false, the plugin will not be shown in the CloudQuery Hub and will only be visible to members of the plugin's team.",
            "type": "boolean"
          },
          "created_at": {
            "example": "2017-07-14T16:53:42Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "CloudQuery Addon",
        "type": "object"
      },
      "AddonVersion": {
        "additionalProperties": false,
        "description": "CloudQuery Addon Version",
        "required": [
          "created_at",
          "name",
          "message",
          "doc",
          "plugin_deps",
          "draft",
          "retracted",
          "checksum"
        ],
        "properties": {
          "created_at": {
            "example": "2017-07-14T16:53:42Z",
            "format": "date-time",
            "type": "string",
            "description": "The date and time the plugin version was created."
          },
          "published_at": {
            "example": "2017-07-14T16:53:42Z",
            "format": "date-time",
            "type": "string",
            "description": "The date and time the plugin version was set to non-draft (published)."
          },
          "name": {
            "$ref": "#/components/schemas/VersionName"
          },
          "message": {
            "type": "string",
            "description": "Description of what's new or changed in this version (supports markdown)",
            "example": "- Added support for *AWS S3* - Added support for *AWS EC2*"
          },
          "doc": {
            "type": "string",
            "description": "Main README in MD format"
          },
          "draft": {
            "type": "boolean",
            "description": "If a plugin version is in draft, it will not show to members outside the team or be counted as the latest version."
          },
          "plugin_deps": {
            "type": "array",
            "items": {
              "type": "string",
              "minItems": 1
            },
            "description": "list of plugins the addon depends on in the format of team_name/kind/name@version"
          },
          "addon_deps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of other addons this addon depends on in the format of team_name/name@version"
          },
          "retracted": {
            "type": "boolean",
            "description": "If a plugin version is retracted, assets will still be available for download, but the version will be marked as retracted to discourage use."
          },
          "checksum": {
            "type": "string",
            "description": "The checksum of the addon asset"
          }
        },
        "title": "CloudQuery Addon Version",
        "type": "object"
      },
      "AddonVersionUpdate": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Description of what's new or changed in this version (supports markdown)",
            "example": "- Added support for *AWS S3* - Added support for *AWS EC2*"
          },
          "doc": {
            "type": "string",
            "description": "Main README in MD format"
          },
          "draft": {
            "type": "boolean",
            "description": "If a plugin version is in draft, it will not show to members outside the team or be counted as the latest version."
          },
          "plugin_deps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of plugins the addon depends on in the format of team_name/kind/name@version"
          },
          "addon_deps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of other addons this addon depends on in the format of team_name/name@version"
          },
          "retracted": {
            "type": "boolean",
            "description": "If a plugin version is retracted, assets will still be available for download, but the version will be marked as retracted to discourage use."
          },
          "checksum": {
            "type": "string",
            "description": "The checksum of the addon asset"
          }
        }
      },
      "Team": {
        "additionalProperties": false,
        "description": "CloudQuery Team",
        "properties": {
          "created_at": {
            "example": "2017-07-14T16:53:42Z",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/TeamName"
          },
          "display_name": {
            "description": "The team's display name",
            "maxLength": 255,
            "type": "string",
            "example": "CloudQuery"
          }
        },
        "required": [
          "name",
          "display_name"
        ],
        "title": "Team",
        "type": "object"
      },
      "Email": {
        "type": "string",
        "example": "user@cloudquery.io",
        "format": "email"
      },
      "UserName": {
        "description": "The unique name for the user.",
        "maxLength": 255,
        "pattern": "^[a-z](-?[a-z0-9]+)+$",
        "type": "string",
        "example": "user"
      },
      "User": {
        "additionalProperties": false,
        "description": "CloudQuery User",
        "properties": {
          "created_at": {
            "example": "2017-07-14T16:53:42Z",
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "$ref": "#/components/schemas/Email"
          },
          "name": {
            "$ref": "#/components/schemas/UserName"
          },
          "updated_at": {
            "example": "2017-07-14T16:53:42Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "title": "CloudQuery User",
        "type": "object"
      },
      "MembershipWithUser": {
        "additionalProperties": false,
        "properties": {
          "role": {
            "type": "string",
            "example": "admin"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "role"
        ],
        "title": "CloudQuery User Membership",
        "type": "object"
      },
      "MonthlyLimit": {
        "title": "CloudQuery Plugin Monthly Limit",
        "description": "A configurable monthly limit for plugin usage.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "created_at",
          "updated_at",
          "plugin_team",
          "plugin_kind",
          "plugin_name",
          "usd"
        ],
        "properties": {
          "created_at": {
            "example": "2017-07-14T16:53:42Z",
            "format": "date-time",
            "type": "string",
            "description": "The date and time the plugin limit was created."
          },
          "updated_at": {
            "example": "2017-07-14T16:53:42Z",
            "format": "date-time",
            "type": "string",
            "description": "The date and time the plugin limit was last updated."
          },
          "plugin_team": {
            "$ref": "#/components/schemas/TeamName"
          },
          "plugin_kind": {
            "$ref": "#/components/schemas/PluginKind"
          },
          "plugin_name": {
            "$ref": "#/components/schemas/PluginName"
          },
          "usd": {
            "example": 1000,
            "type": "integer",
            "minimum": 0,
            "maximum": 1000000000,
            "description": "The maximum USD amount the plugin is allowed to use within a calendar month.",
            "x-go-name": "USD"
          }
        }
      },
      "MonthlyLimitCreate": {
        "title": "CloudQuery Plugin Monthly Limit",
        "description": "A configurable monthly limit for plugin usage.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "plugin_team",
          "plugin_kind",
          "plugin_name",
          "usd"
        ],
        "properties": {
          "plugin_team": {
            "$ref": "#/components/schemas/TeamName"
          },
          "plugin_kind": {
            "$ref": "#/components/schemas/PluginKind"
          },
          "plugin_name": {
            "$ref": "#/components/schemas/PluginName"
          },
          "usd": {
            "example": 1000,
            "type": "integer",
            "minimum": 0,
            "maximum": 1000000000,
            "description": "The maximum USD amount the plugin is allowed to use within a calendar month.",
            "x-go-name": "USD"
          }
        }
      },
      "MonthlyLimitUpdate": {
        "title": "CloudQuery Plugin Monthly Limit",
        "description": "A configurable monthly limit for plugin usage.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "usd"
        ],
        "properties": {
          "usd": {
            "example": 1000,
            "type": "integer",
            "minimum": 0,
            "maximum": 1000000000,
            "description": "The maximum USD amount the plugin is allowed to use within a calendar month.",
            "x-go-name": "USD"
          }
        }
      },
      "UsageCurrent": {
        "title": "CloudQuery Plugin Usage",
        "description": "The usage of a plugin within the current calendar month.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "plugin_team",
          "plugin_kind",
          "plugin_name",
          "usd",
          "rows"
        ],
        "properties": {
          "plugin_team": {
            "$ref": "#/components/schemas/TeamName"
          },
          "plugin_kind": {
            "$ref": "#/components/schemas/PluginKind"
          },
          "plugin_name": {
            "$ref": "#/components/schemas/PluginName"
          },
          "rows": {
            "example": 1000000,
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "description": "The number of rows used by the plugin in the calendar month."
          },
          "usd": {
            "type": "string",
            "example": "43.95",
            "description": "The USD amount used by the plugin in the calendar month, rounded to two decimal places.",
            "x-go-name": "USD"
          },
          "remaining_usd": {
            "type": "string",
            "example": "56.05",
            "description": "The remaining USD amount in the plugin's quota for the calendar month.",
            "x-go-name": "RemainingUSD"
          },
          "remaining_rows": {
            "example": 1000000,
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "description": "The estimated number of rows remaining in the plugin's quota for the calendar month at the current price per row. This includes both free and paid rows up to the monthly limit defined for the plugin."
          }
        }
      },
      "UsageIncrease": {
        "title": "CloudQuery Plugin Usage Increase",
        "description": "Increase the usage of a plugin. This can incur billing costs and should be used only by plugins.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "plugin_team",
          "plugin_kind",
          "plugin_name",
          "rows",
          "request_id"
        ],
        "properties": {
          "plugin_team": {
            "$ref": "#/components/schemas/TeamName"
          },
          "plugin_kind": {
            "$ref": "#/components/schemas/PluginKind"
          },
          "plugin_name": {
            "$ref": "#/components/schemas/PluginName"
          },
          "rows": {
            "example": 1000000,
            "type": "integer",
            "minimum": 0,
            "description": "The additional rows used by the plugin."
          },
          "request_id": {
            "type": "string",
            "format": "uuid",
            "description": "A unique ID associated with the usage increase.",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        }
      },
      "Invitation": {
        "additionalProperties": false,
        "required": [
          "role",
          "email",
          "team_name",
          "created_at"
        ],
        "properties": {
          "team_name": {
            "$ref": "#/components/schemas/TeamName"
          },
          "email": {
            "$ref": "#/components/schemas/Email"
          },
          "role": {
            "type": "string",
            "example": "admin"
          },
          "created_at": {
            "example": "2017-07-14T16:53:42Z",
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "MembershipWithTeam": {
        "additionalProperties": false,
        "properties": {
          "role": {
            "type": "string",
            "example": "admin"
          },
          "team": {
            "$ref": "#/components/schemas/Team"
          }
        },
        "required": [
          "role"
        ],
        "title": "CloudQuery Team Membership",
        "type": "object"
      },
      "InvitationWithToken": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/Invitation"
          },
          {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "format": "uuid",
                "description": "The token used to accept the invitation"
              }
            },
            "required": [
              "token"
            ]
          }
        ]
      },
      "APIKeyName": {
        "description": "Name of the API key",
        "type": "string",
        "example": "cli-api-key",
        "maxLength": 255,
        "minLength": 1,
        "pattern": "^[a-zA-Z0-9-]+$"
      },
      "APIKeyScope": {
        "description": "Scope of permissions for the API key. API keys are used for creating new plugin versions and downloading existing plugins",
        "type": "string",
        "enum": [
          "read-and-write"
        ]
      },
      "APIKey": {
        "description": "API Key to interact with CloudQuery Cloud under specific team",
        "type": "object",
        "required": [
          "name",
          "scope",
          "expires_at",
          "expired"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/APIKeyName"
          },
          "created_by": {
            "$ref": "#/components/schemas/Email",
            "description": "email of the user that created the API key"
          },
          "key": {
            "type": "string",
            "description": "API key. Will be shown only in the response when creating the key.",
            "example": "1234567890abcdef1234567890abcdef"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-14T16:53:42Z"
          },
          "expires_at": {
            "type": "string",
            "description": "Timestamp at which API key will stop working",
            "format": "date-time",
            "example": "2017-07-14T16:53:42Z"
          },
          "expired": {
            "type": "boolean",
            "description": "Whether the API key has expired or not",
            "example": false
          },
          "scope": {
            "$ref": "#/components/schemas/APIKeyScope"
          }
        }
      }
    },
    "responses": {
      "InternalError": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BasicError"
            }
          }
        },
        "description": "Internal Error"
      },
      "RequiresAuthentication": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BasicError"
            }
          }
        },
        "description": "Requires authentication"
      },
      "BadRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FieldError"
            }
          }
        },
        "description": "Bad request"
      },
      "Forbidden": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FieldError"
            }
          }
        },
        "description": "Forbidden"
      },
      "UnprocessableEntity": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FieldError"
            }
          }
        },
        "description": "UnprocessableEntity"
      },
      "NotFound": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BasicError"
            }
          }
        },
        "description": "Resource not found"
      },
      "TooManyRequests": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BasicError"
            }
          }
        },
        "description": "Too Many Requests"
      },
      "MethodNotAllowed": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BasicError"
            }
          }
        },
        "description": "Method not allowed"
      }
    },
    "parameters": {
      "plugin_sort_by": {
        "description": "The field to sort by",
        "in": "query",
        "name": "sort_by",
        "required": false,
        "schema": {
          "enum": [
            "created_at",
            "updated_at",
            "name",
            "downloads"
          ],
          "type": "string"
        }
      },
      "page": {
        "description": "Page number of the results to fetch",
        "in": "query",
        "name": "page",
        "required": false,
        "schema": {
          "default": 1,
          "minimum": 1,
          "type": "integer",
          "format": "int64"
        }
      },
      "per_page": {
        "description": "The number of results per page (max 1000).",
        "in": "query",
        "name": "per_page",
        "required": false,
        "schema": {
          "default": 100,
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "format": "int64"
        }
      },
      "team_name": {
        "in": "path",
        "name": "team_name",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/TeamName"
        }
      },
      "plugin_kind": {
        "in": "path",
        "name": "plugin_kind",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/PluginKind"
        }
      },
      "plugin_name": {
        "in": "path",
        "name": "plugin_name",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/PluginName"
        }
      },
      "version_sort_by": {
        "description": "The field to sort by",
        "in": "query",
        "name": "sort_by",
        "required": false,
        "schema": {
          "enum": [
            "created_at"
          ],
          "type": "string"
        }
      },
      "include_drafts": {
        "description": "Whether to include draft plugins",
        "in": "query",
        "name": "include_drafts",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "version_name": {
        "in": "path",
        "name": "version_name",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/VersionName"
        }
      },
      "target_name": {
        "in": "path",
        "name": "target_name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "addon_sort_by": {
        "description": "The field to sort by",
        "in": "query",
        "name": "sort_by",
        "required": false,
        "schema": {
          "enum": [
            "created_at",
            "updated_at",
            "name",
            "downloads"
          ],
          "type": "string"
        }
      },
      "addon_name": {
        "in": "path",
        "name": "addon_name",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/AddonName"
        }
      },
      "include_private": {
        "description": "Whether to include private plugins",
        "in": "query",
        "name": "include_private",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "plugin_team": {
        "in": "path",
        "name": "plugin_team",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/TeamName"
        }
      },
      "email": {
        "in": "path",
        "name": "email",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Email"
        }
      },
      "apikey_name": {
        "name": "apikey_name",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "cli-api-key",
          "maxLength": 255,
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9-]+$"
        },
        "x-go-name": "APIKeyPathName"
      }
    }
  }
}